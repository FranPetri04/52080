// Generated from c:/Users/Usuario/Desktop/Franco/Analizador.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,23,146,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,
2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,
1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,
12,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,
17,1,17,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,4,20,129,8,20,11,20,12,20,
130,1,21,1,21,5,21,135,8,21,10,21,12,21,138,9,21,1,22,4,22,141,8,22,11,22,
12,22,142,1,22,1,22,0,0,23,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
45,23,1,0,5,4,0,33,33,44,44,46,46,63,63,1,0,48,57,3,0,65,90,95,95,97,122,
4,0,48,57,65,90,95,95,97,122,3,0,9,10,12,13,32,32,148,0,1,1,0,0,0,0,3,1,
0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,1,47,1,0,0,0,3,
51,1,0,0,0,5,54,1,0,0,0,7,58,1,0,0,0,9,60,1,0,0,0,11,62,1,0,0,0,13,64,1,
0,0,0,15,66,1,0,0,0,17,68,1,0,0,0,19,70,1,0,0,0,21,72,1,0,0,0,23,78,1,0,
0,0,25,84,1,0,0,0,27,93,1,0,0,0,29,95,1,0,0,0,31,100,1,0,0,0,33,108,1,0,
0,0,35,117,1,0,0,0,37,123,1,0,0,0,39,125,1,0,0,0,41,128,1,0,0,0,43,132,1,
0,0,0,45,140,1,0,0,0,47,48,5,97,0,0,48,49,5,110,0,0,49,50,5,100,0,0,50,2,
1,0,0,0,51,52,5,111,0,0,52,53,5,114,0,0,53,4,1,0,0,0,54,55,5,110,0,0,55,
56,5,111,0,0,56,57,5,116,0,0,57,6,1,0,0,0,58,59,5,61,0,0,59,8,1,0,0,0,60,
61,5,44,0,0,61,10,1,0,0,0,62,63,5,59,0,0,63,12,1,0,0,0,64,65,5,40,0,0,65,
14,1,0,0,0,66,67,5,41,0,0,67,16,1,0,0,0,68,69,5,123,0,0,69,18,1,0,0,0,70,
71,5,125,0,0,71,20,1,0,0,0,72,73,5,104,0,0,73,74,5,97,0,0,74,75,5,99,0,0,
75,76,5,101,0,0,76,77,5,114,0,0,77,22,1,0,0,0,78,79,5,115,0,0,79,80,5,101,
0,0,80,81,5,103,0,0,81,82,5,117,0,0,82,83,5,110,0,0,83,24,1,0,0,0,84,85,
5,102,0,0,85,86,5,105,0,0,86,87,5,110,0,0,87,88,5,115,0,0,88,89,5,101,0,
0,89,90,5,103,0,0,90,91,5,117,0,0,91,92,5,110,0,0,92,26,1,0,0,0,93,94,5,
58,0,0,94,28,1,0,0,0,95,96,5,99,0,0,96,97,5,97,0,0,97,98,5,115,0,0,98,99,
5,111,0,0,99,30,1,0,0,0,100,101,5,100,0,0,101,102,5,101,0,0,102,103,5,102,
0,0,103,104,5,101,0,0,104,105,5,99,0,0,105,106,5,116,0,0,106,107,5,111,0,
0,107,32,1,0,0,0,108,109,5,105,0,0,109,110,5,109,0,0,110,111,5,112,0,0,111,
112,5,114,0,0,112,113,5,105,0,0,113,114,5,109,0,0,114,115,5,105,0,0,115,
116,5,114,0,0,116,34,1,0,0,0,117,118,5,115,0,0,118,119,5,97,0,0,119,120,
5,108,0,0,120,121,5,105,0,0,121,122,5,114,0,0,122,36,1,0,0,0,123,124,5,34,
0,0,124,38,1,0,0,0,125,126,7,0,0,0,126,40,1,0,0,0,127,129,7,1,0,0,128,127,
1,0,0,0,129,130,1,0,0,0,130,128,1,0,0,0,130,131,1,0,0,0,131,42,1,0,0,0,132,
136,7,2,0,0,133,135,7,3,0,0,134,133,1,0,0,0,135,138,1,0,0,0,136,134,1,0,
0,0,136,137,1,0,0,0,137,44,1,0,0,0,138,136,1,0,0,0,139,141,7,4,0,0,140,139,
1,0,0,0,141,142,1,0,0,0,142,140,1,0,0,0,142,143,1,0,0,0,143,144,1,0,0,0,
144,145,6,22,0,0,145,46,1,0,0,0,4,0,130,136,142,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class AnalizadorLexer extends antlr4.Lexer {

    static grammarFileName = "Analizador.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'and'", "'or'", "'not'", "'='", "','", "';'", 
                         "'('", "')'", "'{'", "'}'", "'hacer'", "'segun'", 
                         "'finsegun'", "':'", "'caso'", "'defecto'", "'imprimir'", 
                         "'salir'", "'\"'" ];
	static symbolicNames = [ null, "AND", "OR", "NOT", "EQ", "COMMA", "SEMI", 
                          "LPAREN", "RPAREN", "LCURLY", "RCURLY", "HACER", 
                          "SEGUN", "FINSEGUN", "DOBPUNT", "CASO", "DEFECTO", 
                          "IMPRIMIR", "SALIR", "COMILLA", "SIMB", "INT", 
                          "ID", "WS" ];
	static ruleNames = [ "AND", "OR", "NOT", "EQ", "COMMA", "SEMI", "LPAREN", 
                      "RPAREN", "LCURLY", "RCURLY", "HACER", "SEGUN", "FINSEGUN", 
                      "DOBPUNT", "CASO", "DEFECTO", "IMPRIMIR", "SALIR", 
                      "COMILLA", "SIMB", "INT", "ID", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

AnalizadorLexer.EOF = antlr4.Token.EOF;
AnalizadorLexer.AND = 1;
AnalizadorLexer.OR = 2;
AnalizadorLexer.NOT = 3;
AnalizadorLexer.EQ = 4;
AnalizadorLexer.COMMA = 5;
AnalizadorLexer.SEMI = 6;
AnalizadorLexer.LPAREN = 7;
AnalizadorLexer.RPAREN = 8;
AnalizadorLexer.LCURLY = 9;
AnalizadorLexer.RCURLY = 10;
AnalizadorLexer.HACER = 11;
AnalizadorLexer.SEGUN = 12;
AnalizadorLexer.FINSEGUN = 13;
AnalizadorLexer.DOBPUNT = 14;
AnalizadorLexer.CASO = 15;
AnalizadorLexer.DEFECTO = 16;
AnalizadorLexer.IMPRIMIR = 17;
AnalizadorLexer.SALIR = 18;
AnalizadorLexer.COMILLA = 19;
AnalizadorLexer.SIMB = 20;
AnalizadorLexer.INT = 21;
AnalizadorLexer.ID = 22;
AnalizadorLexer.WS = 23;



